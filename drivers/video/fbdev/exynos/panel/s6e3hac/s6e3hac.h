/*
 * linux/drivers/video/fbdev/exynos/panel/s6e3hac/s6e3hac.h
 *
 * Header file for S6E3HAC Dimming Driver
 *
 * Copyright (c) 2016 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __S6E3HAC_H__
#define __S6E3HAC_H__

#define HAC_CANVAS_BRINGUP 0

#include <linux/types.h>
#include <linux/kernel.h>
#ifdef CONFIG_SUPPORT_DDI_FLASH
#include "../panel_poc.h"
#endif
/*
 * OFFSET ==> OFS means N-param - 1
 * <example>
 * XXX 1st param => S6E3HAC_XXX_OFS (0)
 * XXX 2nd param => S6E3HAC_XXX_OFS (1)
 * XXX 36th param => S6E3HAC_XXX_OFS (35)
 */

#undef CONFIG_PANEL_VRR_BRIDGE

#define AID_INTERPOLATION
#define S6E3HAC_GAMMA_CMD_CNT (35)

#define S6E3HAC_IRC_ONOFF_OFS	(0)
#define S6E3HAC_IRC_VALUE_OFS	(10)
#define S6E3HAC_IRC_VALUE_LEN	(33)

#define S6E3HAC_ADDR_OFS	(0)
#define S6E3HAC_ADDR_LEN	(1)
#define S6E3HAC_DATA_OFS	(S6E3HAC_ADDR_OFS + S6E3HAC_ADDR_LEN)

#define S6E3HAC_MTP_REG				0xC8
#define S6E3HAC_MTP_OFS				0
#define S6E3HAC_MTP_LEN				34

#define S6E3HAC_DATE_REG			0xA1
#define S6E3HAC_DATE_OFS			4
#define S6E3HAC_DATE_LEN			(PANEL_DATE_LEN)

#define S6E3HAC_COORDINATE_REG		0xA1
#define S6E3HAC_COORDINATE_OFS		0
#define S6E3HAC_COORDINATE_LEN		(PANEL_COORD_LEN)

#define S6E3HAC_ID_REG				0x04
#define S6E3HAC_ID_OFS				0
#define S6E3HAC_ID_LEN				(PANEL_ID_LEN)

#define S6E3HAC_CODE_REG			0xD6
#define S6E3HAC_CODE_OFS			0
#define S6E3HAC_CODE_LEN			(PANEL_CODE_LEN)

#define S6E3HAC_ELVSS_REG			0xB5
#define S6E3HAC_ELVSS_OFS			0
#define S6E3HAC_ELVSS_LEN			23

#define S6E3HAC_ELVSS_TEMP_0_REG		0xB5
#define S6E3HAC_ELVSS_TEMP_0_OFS		74
#define S6E3HAC_ELVSS_TEMP_0_LEN		1

#define S6E3HAC_ELVSS_TEMP_1_REG		0xB5
#define S6E3HAC_ELVSS_TEMP_1_OFS		75
#define S6E3HAC_ELVSS_TEMP_1_LEN		1

#define S6E3HAC_OCTA_ID_REG			0xA1
#define S6E3HAC_OCTA_ID_OFS			11
#define S6E3HAC_OCTA_ID_LEN			(PANEL_OCTA_ID_LEN)

#define S6E3HAC_COPR_SPI_REG			0x5A
#define S6E3HAC_COPR_SPI_OFS			0
#define S6E3HAC_COPR_SPI_LEN			(41)

#define S6E3HAC_COPR_DSI_REG			0x5A
#define S6E3HAC_COPR_DSI_OFS			0
#define S6E3HAC_COPR_DSI_LEN			(41)

#define S6E3HAC_CHIP_ID_REG			0xD6
#define S6E3HAC_CHIP_ID_OFS			0
#define S6E3HAC_CHIP_ID_LEN			5

#define S6E3HAC_VBIAS1_REG			0xF4
#define S6E3HAC_VBIAS1_OFS			0x29
#define S6E3HAC_VBIAS1_LEN			(14)

#define S6E3HAC_VBIAS2_REG			0xF4
#define S6E3HAC_VBIAS2_OFS			0x3E
#define S6E3HAC_VBIAS2_LEN			(1)

/* for brightness debugging */
#define S6E3HAC_GAMMA_REG			0xCA
#define S6E3HAC_GAMMA_OFS			0
#define S6E3HAC_GAMMA_LEN			34

/* gamma mtp offset */
#define S6E3HAC_GAMMA_MTP_LEN	(34)

#define S6E3HAC_GAMMA_MTP_0_NS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_0_NS_OFS	(0x00)
#define S6E3HAC_GAMMA_MTP_0_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_1_NS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_1_NS_OFS	(0x25)
#define S6E3HAC_GAMMA_MTP_1_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_2_NS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_2_NS_OFS	(0x4A)
#define S6E3HAC_GAMMA_MTP_2_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_3_NS_REG	(0xC9)
#define S6E3HAC_GAMMA_MTP_3_NS_OFS	(0x00)
#define S6E3HAC_GAMMA_MTP_3_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_4_NS_REG	(0xC9)
#define S6E3HAC_GAMMA_MTP_4_NS_OFS	(0x25)
#define S6E3HAC_GAMMA_MTP_4_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_5_NS_REG	(0xC9)
#define S6E3HAC_GAMMA_MTP_5_NS_OFS	(0x4A)
#define S6E3HAC_GAMMA_MTP_5_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_6_NS_REG	(0xC9)
#define S6E3HAC_GAMMA_MTP_6_NS_OFS	(0x6F)
#define S6E3HAC_GAMMA_MTP_6_NS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_0_HS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_0_HS_OFS	(0x6F)
#define S6E3HAC_GAMMA_MTP_0_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_1_HS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_1_HS_OFS	(0x94)
#define S6E3HAC_GAMMA_MTP_1_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_2_HS_REG	(0xC8)
#define S6E3HAC_GAMMA_MTP_2_HS_OFS	(0xB9)
#define S6E3HAC_GAMMA_MTP_2_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_3_HS_REG	(0xC7)
#define S6E3HAC_GAMMA_MTP_3_HS_OFS	(0x13)
#define S6E3HAC_GAMMA_MTP_3_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_4_HS_REG	(0xC7)
#define S6E3HAC_GAMMA_MTP_4_HS_OFS	(0x38)
#define S6E3HAC_GAMMA_MTP_4_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_5_HS_REG	(0xC7)
#define S6E3HAC_GAMMA_MTP_5_HS_OFS	(0x5D)
#define S6E3HAC_GAMMA_MTP_5_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_GAMMA_MTP_6_HS_REG	(0xC7)
#define S6E3HAC_GAMMA_MTP_6_HS_OFS	(0x82)
#define S6E3HAC_GAMMA_MTP_6_HS_LEN	(S6E3HAC_GAMMA_MTP_LEN)

#define S6E3HAC_AOR_NS_REG			(0xB1)
#define S6E3HAC_AOR_NS_OFS			(0x41)
#define S6E3HAC_AOR_NS_LEN			(2)

#define S6E3HAC_AOR_HS_REG			(0xB1)
#define S6E3HAC_AOR_HS_OFS			(0x59)
#define S6E3HAC_AOR_HS_LEN			(2)

#define S6E3HAC_VFP_NS_REG			(0xF2)
#define S6E3HAC_VFP_NS_OFS			(0x0D)
#define S6E3HAC_VFP_NS_LEN			(2)

#define S6E3HAC_VFP_HS_REG			(0xF2)
#define S6E3HAC_VFP_HS_OFS			(0x06)
#define S6E3HAC_VFP_HS_LEN			(2)

#define S6E3HAC_VTOTAL_NS_0_REG		(0xB1)
#define S6E3HAC_VTOTAL_NS_0_OFS		(0x2B)
#define S6E3HAC_VTOTAL_NS_0_LEN		(2)

#define S6E3HAC_VTOTAL_NS_1_REG		(0xB1)
#define S6E3HAC_VTOTAL_NS_1_OFS		(0x3D)
#define S6E3HAC_VTOTAL_NS_1_LEN		(2)

#define S6E3HAC_VTOTAL_HS_0_REG		(0xB1)
#define S6E3HAC_VTOTAL_HS_0_OFS		(0x43)
#define S6E3HAC_VTOTAL_HS_0_LEN		(2)

#define S6E3HAC_VTOTAL_HS_1_REG		(0xB1)
#define S6E3HAC_VTOTAL_HS_1_OFS		(0x55)
#define S6E3HAC_VTOTAL_HS_1_LEN		(2)

#define S6E3HAC_VFP_OPT_NS_REG		(0xB1)
#define S6E3HAC_VFP_OPT_NS_OFS		(0x3F)
#define S6E3HAC_VFP_OPT_NS_LEN		(2)

#define S6E3HAC_VFP_OPT_HS_REG		(0xB1)
#define S6E3HAC_VFP_OPT_HS_OFS		(0x57)
#define S6E3HAC_VFP_OPT_HS_LEN		(2)

#define S6E3HAC_VINT_REG			0xF4
#define S6E3HAC_VINT_OFS			4
#define S6E3HAC_VINT_LEN			1

#define S6E3HAC_ELVSS_T_REG			0xB5
#define S6E3HAC_ELVSS_T_OFS			2
#define S6E3HAC_ELVSS_T_LEN			1

#define S6E3HAC_IRC_REG			(0x92)
#define S6E3HAC_IRC_OFS			(S6E3HAC_IRC_VALUE_OFS)
#define S6E3HAC_IRC_LEN			(S6E3HAC_IRC_VALUE_LEN)

/* for panel dump */
#define S6E3HAC_RDDPM_REG			0x0A
#define S6E3HAC_RDDPM_OFS			0
#define S6E3HAC_RDDPM_LEN			(PANEL_RDDPM_LEN)

#define S6E3HAC_RDDSM_REG			0x0E
#define S6E3HAC_RDDSM_OFS			0
#define S6E3HAC_RDDSM_LEN			(PANEL_RDDSM_LEN)

#define S6E3HAC_ERR_REG				0xE9
#define S6E3HAC_ERR_OFS				0
#define S6E3HAC_ERR_LEN				5

#define S6E3HAC_ERR_FG_REG			0xEE
#define S6E3HAC_ERR_FG_OFS			0
#define S6E3HAC_ERR_FG_LEN			1

#define S6E3HAC_DSI_ERR_REG			0x05
#define S6E3HAC_DSI_ERR_OFS			0
#define S6E3HAC_DSI_ERR_LEN			1

#define S6E3HAC_SELF_DIAG_REG			0x0F
#define S6E3HAC_SELF_DIAG_OFS			0
#define S6E3HAC_SELF_DIAG_LEN			1

#define S6E3HAC_SELF_MASK_CHECKSUM_REG		0x14
#define S6E3HAC_SELF_MASK_CHECKSUM_OFS		0
#define S6E3HAC_SELF_MASK_CHECKSUM_LEN		2

#define S6E3HAC_SELF_MASK_CRC_REG		0x7F
#define S6E3HAC_SELF_MASK_CRC_OFS	6
#define S6E3HAC_SELF_MASK_CRC_LEN		4

#ifdef CONFIG_SUPPORT_DDI_CMDLOG
#define S6E3HAC_CMDLOG_REG			0x9C
#define S6E3HAC_CMDLOG_OFS			0
#define S6E3HAC_CMDLOG_LEN			0x80
#endif

#ifdef CONFIG_SUPPORT_DDI_FLASH
#define S6E3HAC_POC_CHKSUM_REG		0xEC
#define S6E3HAC_POC_CHKSUM_OFS		0
#define S6E3HAC_POC_CHKSUM_LEN		(PANEL_POC_CHKSUM_LEN)

#define S6E3HAC_POC_CTRL_REG		0xEB
#define S6E3HAC_POC_CTRL_OFS		0
#define S6E3HAC_POC_CTRL_LEN		(PANEL_POC_CTRL_LEN)

#define S6E3HAC_POC_DATA_REG		0xFB
#define S6E3HAC_POC_DATA_OFS		(12)
#define S6E3HAC_POC_DATA_LEN		(1)
#endif

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
#define S6E3HAC_GRAM_CHECKSUM_REG	0xAF
#define S6E3HAC_GRAM_CHECKSUM_OFS	0
#define S6E3HAC_GRAM_CHECKSUM_LEN	1
#define S6E3HAC_GRAM_CHECKSUM_VALID_1	0x08
#define S6E3HAC_GRAM_CHECKSUM_VALID_2	0x48
#endif

#define S6E3HAC_MCD_RESISTANCE_REG			0xCD
#define S6E3HAC_MCD_RESISTANCE_OFS			2
#define S6E3HAC_MCD_RESISTANCE_LEN			1

#ifdef CONFIG_SUPPORT_CCD_TEST
#define S6E3HAC_CCD_STATE_REG				0xCD
#define S6E3HAC_CCD_STATE_OFS				14
#define S6E3HAC_CCD_STATE_LEN				1
#endif

#ifdef CONFIG_SUPPORT_MAFPC
#define S6E3HAC_MAFPC_REG					0x87
#define S6E3HAC_MAFPC_OFS					0
#define S6E3HAC_MAFPC_LEN					1

#define S6E3HAC_MAFPC_FLASH_REG				0xFE
#define S6E3HAC_MAFPC_FLASH_OFS				0x09
#define S6E3HAC_MAFPC_FLASH_LEN				1

#define S6E3HAC_MAFPC_CRC_REG				0x14
#define S6E3HAC_MAFPC_CRC_OFS				0
#define S6E3HAC_MAFPC_CRC_LEN				2
#endif

#ifdef CONFIG_SUPPORT_DDI_FLASH
/* MCD */
#define S6E3HAC_FLASH_MCD_ADDR	(POC_MCD_PARTITION)
#define S6E3HAC_FLASH_MCD1_R_OFS	(0)
#define S6E3HAC_FLASH_MCD1_R_LEN	(1)
#define S6E3HAC_FLASH_MCD2_R_OFS	(S6E3HAC_FLASH_MCD1_R_OFS + S6E3HAC_FLASH_MCD1_R_LEN)
#define S6E3HAC_FLASH_MCD2_R_LEN	(1)
/* DUMMY 2byte */
#define S6E3HAC_FLASH_MCD1_L_OFS	(S6E3HAC_FLASH_MCD2_R_OFS + S6E3HAC_FLASH_MCD2_R_LEN + 2)
#define S6E3HAC_FLASH_MCD1_L_LEN	(1)
#define S6E3HAC_FLASH_MCD2_L_OFS	(S6E3HAC_FLASH_MCD1_L_OFS + S6E3HAC_FLASH_MCD1_L_LEN)
#define S6E3HAC_FLASH_MCD2_L_LEN	(1)
#define S6E3HAC_FLASH_MCD_LEN	(S6E3HAC_FLASH_MCD2_L_OFS + S6E3HAC_FLASH_MCD2_L_LEN)
#endif /* CONFIG_SUPPORT_DDI_FLASH */

#ifdef CONFIG_SUPPORT_POC_FLASH
#define S6E3HAC_POC_MCA_CHKSUM_REG		(0x96)
#define S6E3HAC_POC_MCA_CHKSUM_OFS		(0)
#define S6E3HAC_POC_MCA_CHKSUM_LEN		(63)
#endif

#ifdef CONFIG_SUPPORT_GM2_FLASH
#define S6E3HAC_GM2_FLASH_VBIAS1_ADDR	(POC_GM2_VBIAS_PARTITION)
#define S6E3HAC_GM2_FLASH_VBIAS1_COL	(14)
#define S6E3HAC_GM2_FLASH_VBIAS1_ROW	(6)
#define S6E3HAC_GM2_FLASH_VBIAS1_OFS	(0)
#define S6E3HAC_GM2_FLASH_VBIAS1_LEN	(S6E3HAC_GM2_FLASH_VBIAS1_COL * S6E3HAC_GM2_FLASH_VBIAS1_ROW)

#define S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_ADDR	(POC_GM2_VBIAS_PARTITION)
#define S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_OFS	(S6E3HAC_GM2_FLASH_VBIAS1_LEN)
#define S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_LEN	(2)

#define S6E3HAC_GM2_FLASH_VBIAS_MAGICNUM_ADDR	(POC_GM2_VBIAS_PARTITION)
#define S6E3HAC_GM2_FLASH_VBIAS_MAGICNUM_OFS	(S6E3HAC_GM2_FLASH_VBIAS1_LEN + S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_LEN)
#define S6E3HAC_GM2_FLASH_VBIAS_MAGICNUM_LEN	(1)


#define S6E3HAC_GM2_FLASH_VBIAS2_ADDR	(POC_GM2_VBIAS_PARTITION)
#define S6E3HAC_GM2_FLASH_VBIAS2_COL	(2)
#define S6E3HAC_GM2_FLASH_VBIAS2_ROW	(1)
#define S6E3HAC_GM2_FLASH_VBIAS2_OFS	(S6E3HAC_GM2_FLASH_VBIAS1_LEN + S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_LEN + S6E3HAC_GM2_FLASH_VBIAS_MAGICNUM_LEN)
#define S6E3HAC_GM2_FLASH_VBIAS2_LEN	(S6E3HAC_GM2_FLASH_VBIAS2_COL * S6E3HAC_GM2_FLASH_VBIAS2_ROW)

#define S6E3HAC_GM2_FLASH_VBIAS_TOTAL_SIZE (S6E3HAC_GM2_FLASH_VBIAS1_LEN \
	+ S6E3HAC_GM2_FLASH_VBIAS_CHECKSUM_LEN + S6E3HAC_GM2_FLASH_VBIAS_MAGICNUM_LEN + S6E3HAC_GM2_FLASH_VBIAS2_LEN)

#endif

#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
#define NR_S6E3HAC_MDNIE_REG	(3)

#define S6E3HAC_MDNIE_0_REG		(0xDF)
#define S6E3HAC_MDNIE_0_OFS		(0)
#define S6E3HAC_MDNIE_0_LEN		(124)

#define S6E3HAC_MDNIE_1_REG		(0xDE)
#define S6E3HAC_MDNIE_1_OFS		(S6E3HAC_MDNIE_0_OFS + S6E3HAC_MDNIE_0_LEN)
#define S6E3HAC_MDNIE_1_LEN		(196)

#define S6E3HAC_MDNIE_2_REG		(0xDD)
#define S6E3HAC_MDNIE_2_OFS		(S6E3HAC_MDNIE_1_OFS + S6E3HAC_MDNIE_1_LEN)
#define S6E3HAC_MDNIE_2_LEN		(19)
#define S6E3HAC_MDNIE_LEN		(S6E3HAC_MDNIE_0_LEN + S6E3HAC_MDNIE_1_LEN + S6E3HAC_MDNIE_2_LEN)

#ifdef CONFIG_SUPPORT_AFC
#define S6E3HAC_AFC_REG			(0xE2)
#define S6E3HAC_AFC_OFS			(0)
#define S6E3HAC_AFC_LEN			(70)
#define S6E3HAC_AFC_ROI_OFS		(55)
#define S6E3HAC_AFC_ROI_LEN		(12)
#endif

#define S6E3HAC_SCR_CR_OFS	(31)
#define S6E3HAC_SCR_WR_OFS	(49)
#define S6E3HAC_SCR_WG_OFS	(51)
#define S6E3HAC_SCR_WB_OFS	(53)
#define S6E3HAC_NIGHT_MODE_OFS	(S6E3HAC_SCR_CR_OFS)
#define S6E3HAC_NIGHT_MODE_LEN	(24)
#define S6E3HAC_COLOR_LENS_OFS	(S6E3HAC_SCR_CR_OFS)
#define S6E3HAC_COLOR_LENS_LEN	(24)

#define S6E3HAC_TRANS_MODE_OFS	(16)
#define S6E3HAC_TRANS_MODE_LEN	(1)
#endif /* CONFIG_EXYNOS_DECON_MDNIE_LITE */

#ifdef CONFIG_SUPPORT_POC_SPI
#define S6E3HAC_POC_SPI_READ_REG (0x03)
#define S6E3HAC_POC_SPI_READ_LEN (2048)
#define S6E3HAC_POC_SPI_STATUS1_REG (0x05)
#define S6E3HAC_POC_SPI_STATUS1_LEN (1)
#define S6E3HAC_POC_SPI_STATUS2_REG (0x35)
#define S6E3HAC_POC_SPI_STATUS2_LEN (1)
#endif

#ifdef CONFIG_DYNAMIC_FREQ
#define S6E3HAC_MAX_MIPI_FREQ			4
#define S6E3HAC_DEFAULT_MIPI_FREQ		3
enum {
	S6E3HAC_OSC_DEFAULT,
	MAX_S6E3HAC_OSC,
};
#endif

#define MIN_S6E3HAC_FPS_DIV_COUNT (1)
#define MAX_S6E3HAC_FPS_DIV_COUNT (12)

enum {
	GAMMA_MAPTBL,
	GAMMA_MODE2_MAPTBL,
	GAMMA_MODE2_EXIT_LPM_MAPTBL,
	VBIAS1_MAPTBL,
	VBIAS2_MAPTBL,
	MPS_MAPTBL,
	TSET_MAPTBL,
	ELVSS_MAPTBL,
	ELVSS_TEMP_MAPTBL,
#ifdef CONFIG_SUPPORT_XTALK_MODE
	VGH_MAPTBL,
#endif
	VINT_MAPTBL,
	VINT_VRR_120HZ_MAPTBL,
	ACL_ONOFF_MAPTBL,
	ACL_FRAME_AVG_MAPTBL,
	ACL_START_POINT_MAPTBL,
	ACL_OPR_MAPTBL,
	IRC_MAPTBL,
	IRC_MODE_MAPTBL,
	DSC_MAPTBL,
	PPS_MAPTBL,
	SCALER_MAPTBL,
	CASET_MAPTBL,
	PASET_MAPTBL,
	SSD_IMPROVE_MAPTBL,
	AID_MAPTBL,
	OSC_MAPTBL,
	OSC_REV40_MAPTBL,
	OSC_SEL_MAPTBL,
	/* default */
	VFP_NS_MAPTBL,
	VFP_HS_MAPTBL,
	VTOTAL_NS_MAPTBL,
	VTOTAL_HS_MAPTBL,
	VFP_OPT_NS_MAPTBL,
	VFP_OPT_HS_MAPTBL,
	AOR_NS_MAPTBL,
	AOR_HS_MAPTBL,
	/* for rev40~51 (less than or equal rev51) */
	VFP_NS_LE_REV51_MAPTBL,
	VFP_HS_LE_REV51_MAPTBL,
	VTOTAL_NS_LE_REV51_MAPTBL,
	VTOTAL_HS_LE_REV51_MAPTBL,
	VFP_OPT_NS_LE_REV51_MAPTBL,
	VFP_OPT_HS_LE_REV51_MAPTBL,
	AOR_NS_LE_REV51_MAPTBL,
	AOR_HS_LE_REV51_MAPTBL,
	PWR_GEN_MAPTBL,
	SRC_AMP_MAPTBL,
	LTPS_0_MAPTBL,
	OSC_86_4M_LTPS_1_MAPTBL,
	OSC_86_4M_LTPS_2_MAPTBL,
	OSC_96_5M_LTPS_1_MAPTBL,
	OSC_96_5M_LTPS_2_MAPTBL,
	MTP_MAPTBL,
	FPS_MAPTBL,
	LPM_NIT_MAPTBL,
	LPM_NIT_REV40_MAPTBL,
	LPM_MODE_MAPTBL,
	LPM_FPS_MAPTBL,
	LPM_DYN_VLIN_MAPTBL,
	LPM_OFF_MAPTBL,
	LPM_AOR_OFF_MAPTBL,
#ifdef CONFIG_SUPPORT_DDI_FLASH
	POC_ON_MAPTBL,
	POC_WR_ADDR_MAPTBL,
	POC_RD_ADDR_MAPTBL,
	POC_WR_DATA_MAPTBL,
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
	POC_ER_ADDR_MAPTBL,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	POC_SPI_READ_ADDR_MAPTBL,
	POC_SPI_WRITE_ADDR_MAPTBL,
	POC_SPI_WRITE_DATA_MAPTBL,
	POC_SPI_ERASE_ADDR_MAPTBL,
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	VDDM_MAPTBL,
	GRAM_IMG_MAPTBL,
	GRAM_INV_IMG_MAPTBL,
#endif
	POC_ONOFF_MAPTBL,
#ifdef CONFIG_SUPPORT_TDMB_TUNE
	TDMB_TUNE_MAPTBL,
#endif
#ifdef CONFIG_DYNAMIC_FREQ
	OSC_96_5M_DYN_FFC_MAPTBL,
	DYN_FFC_MAPTBL,
	OSC_96_5M_DEFAULT_FFC_MAPTBL,
	DEFAULT_FFC_MAPTBL,
	DDI_OSC_CLK_TUNE1,
	DDI_OSC_CLK_TUNE2,
	DDI_OSC_LTPS_COMP1,
	DDI_OSC_LTPS_COMP2,
#endif
	MCD_RESISTANCE_MAPTBL,
#ifdef CONFIG_SUPPORT_MAFPC
	MAFPC_ENA_MAPTBL,
	MAFPC_SCALE_MAPTBL,
#endif
	GAMMA_INTER_CONTROL_MAPTBL,
	POC_COMP_MAPTBL,
	DBV_MAPTBL,
	HBM_CYCLE_MAPTBL,
	HBM_ONOFF_MAPTBL,
	DIA_ONOFF_MAPTBL,
	LFD_MIN_MAPTBL,
	LFD_MAX_MAPTBL,
	LFD_FRAME_INSERTION_MAPTBL,
	LFD_MCA_DITHER_MAPTBL,
	GAMMA_MTP_0_NS_MAPTBL,
	GAMMA_MTP_1_NS_MAPTBL,
	GAMMA_MTP_2_NS_MAPTBL,
	GAMMA_MTP_3_NS_MAPTBL,
	GAMMA_MTP_4_NS_MAPTBL,
	GAMMA_MTP_5_NS_MAPTBL,
	GAMMA_MTP_6_NS_MAPTBL,
	GAMMA_MTP_0_HS_MAPTBL,
	GAMMA_MTP_1_HS_MAPTBL,
	GAMMA_MTP_2_HS_MAPTBL,
	GAMMA_MTP_3_HS_MAPTBL,
	GAMMA_MTP_4_HS_MAPTBL,
	GAMMA_MTP_5_HS_MAPTBL,
	GAMMA_MTP_6_HS_MAPTBL,
	TE_FRAME_SEL_MAPTBL,
	MAX_MAPTBL,
};

enum {
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	READ_COPR_SPI,
	READ_COPR_DSI,
#endif
	READ_ID,
	READ_COORDINATE,
	READ_CODE,
	READ_ELVSS,
	READ_ELVSS_TEMP_0,
	READ_ELVSS_TEMP_1,
	READ_MTP,
	READ_DATE,
	READ_OCTA_ID,
	READ_CHIP_ID,
	READ_VBIAS1,
	READ_VBIAS2,
	/* for brightness debugging */
	READ_GAMMA,
	READ_VINT,
	READ_ELVSS_T,
	READ_IRC,

	READ_RDDPM,
	READ_RDDSM,
	READ_ERR,
	READ_ERR_FG,
	READ_DSI_ERR,
	READ_SELF_DIAG,
	READ_SELF_MASK_CHECKSUM,
	READ_SELF_MASK_CRC,
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	READ_CMDLOG,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	READ_POC_CHKSUM,
	READ_POC_CTRL,
	READ_POC_DATA,
	READ_FLASH_MCD,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	READ_POC_SPI_READ,
	READ_POC_SPI_STATUS1,
	READ_POC_SPI_STATUS2,
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
	READ_POC_MCA_CHKSUM,
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	READ_GRAM_CHECKSUM,
#endif
	READ_MCD_RESISTANCE,
#ifdef CONFIG_SUPPORT_GM2_FLASH
	READ_GM2_FLASH_VBIAS1,
	READ_GM2_FLASH_VBIAS2,
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
	READ_CCD_STATE,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	READ_MAFPC,
	READ_MAFPC_FLASH,
	READ_MAFPC_CRC,
#endif
	READ_VFP_NS,
	READ_VFP_HS,
	READ_GAMMA_MTP_0_NS,
	READ_GAMMA_MTP_1_NS,
	READ_GAMMA_MTP_2_NS,
	READ_GAMMA_MTP_3_NS,
	READ_GAMMA_MTP_4_NS,
	READ_GAMMA_MTP_5_NS,
	READ_GAMMA_MTP_6_NS,
	READ_GAMMA_MTP_0_HS,
	READ_GAMMA_MTP_1_HS,
	READ_GAMMA_MTP_2_HS,
	READ_GAMMA_MTP_3_HS,
	READ_GAMMA_MTP_4_HS,
	READ_GAMMA_MTP_5_HS,
	READ_GAMMA_MTP_6_HS,
};

enum {
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	RES_COPR_SPI,
	RES_COPR_DSI,
#endif
	RES_ID,
	RES_COORDINATE,
	RES_CODE,
	RES_ELVSS,
	RES_ELVSS_TEMP_0,
	RES_ELVSS_TEMP_1,
	RES_MTP,
	RES_DATE,
	RES_OCTA_ID,
	RES_CHIP_ID,
	RES_VBIAS1,
	RES_VBIAS2,
	/* for brightness debugging */
	RES_GAMMA,
	RES_VINT,
	RES_ELVSS_T,
	RES_IRC,
	RES_RDDPM,
	RES_RDDSM,
	RES_ERR,
	RES_ERR_FG,
	RES_DSI_ERR,
	RES_SELF_DIAG,
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	RES_CMDLOG,
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	RES_POC_CHKSUM,
	RES_POC_CTRL,
	RES_POC_DATA,
	RES_FLASH_MCD,
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	RES_POC_SPI_READ,
	RES_POC_SPI_STATUS1,
	RES_POC_SPI_STATUS2,
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
	RES_POC_MCA_CHKSUM,
#endif
#ifdef CONFIG_SUPPORT_GM2_FLASH
	RES_GM2_FLASH_VBIAS1,
	RES_GM2_FLASH_VBIAS2,
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	RES_GRAM_CHECKSUM,
#endif
	RES_MCD_RESISTANCE,
#ifdef CONFIG_SUPPORT_CCD_TEST
	RES_CCD_STATE,
	RES_CCD_CHKSUM_PASS,
#endif
	RES_SELF_MASK_CHECKSUM,
	RES_SELF_MASK_CRC,
#ifdef CONFIG_SUPPORT_MAFPC
	RES_MAFPC,
	RES_MAFPC_FLASH,
	RES_MAFPC_CRC,
#endif
	RES_VFP_NS,
	RES_VFP_HS,
	RES_GAMMA_MTP_0_NS,
	RES_GAMMA_MTP_1_NS,
	RES_GAMMA_MTP_2_NS,
	RES_GAMMA_MTP_3_NS,
	RES_GAMMA_MTP_4_NS,
	RES_GAMMA_MTP_5_NS,
	RES_GAMMA_MTP_6_NS,
	RES_GAMMA_MTP_0_HS,
	RES_GAMMA_MTP_1_HS,
	RES_GAMMA_MTP_2_HS,
	RES_GAMMA_MTP_3_HS,
	RES_GAMMA_MTP_4_HS,
	RES_GAMMA_MTP_5_HS,
	RES_GAMMA_MTP_6_HS,
};

static u8 S6E3HAC_ID[S6E3HAC_ID_LEN];
static u8 S6E3HAC_COORDINATE[S6E3HAC_COORDINATE_LEN];
static u8 S6E3HAC_CODE[S6E3HAC_CODE_LEN];
static u8 S6E3HAC_ELVSS[S6E3HAC_ELVSS_LEN];
static u8 S6E3HAC_ELVSS_TEMP_0[S6E3HAC_ELVSS_TEMP_0_LEN];
static u8 S6E3HAC_ELVSS_TEMP_1[S6E3HAC_ELVSS_TEMP_1_LEN];
static u8 S6E3HAC_MTP[S6E3HAC_MTP_LEN];
static u8 S6E3HAC_DATE[S6E3HAC_DATE_LEN];
static u8 S6E3HAC_OCTA_ID[S6E3HAC_OCTA_ID_LEN];
static u8 S6E3HAC_VBIAS1[S6E3HAC_VBIAS1_LEN];
static u8 S6E3HAC_VBIAS2[S6E3HAC_VBIAS2_LEN];
/* for brightness debugging */
static u8 S6E3HAC_GAMMA[S6E3HAC_GAMMA_LEN];
static u8 S6E3HAC_VINT[S6E3HAC_VINT_LEN];
static u8 S6E3HAC_ELVSS_T[S6E3HAC_ELVSS_T_LEN];
static u8 S6E3HAC_IRC[S6E3HAC_IRC_LEN];

#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
static u8 S6E3HAC_COPR_SPI[S6E3HAC_COPR_SPI_LEN];
static u8 S6E3HAC_COPR_DSI[S6E3HAC_COPR_DSI_LEN];
#endif

static u8 S6E3HAC_CHIP_ID[S6E3HAC_CHIP_ID_LEN];
static u8 S6E3HAC_RDDPM[S6E3HAC_RDDPM_LEN];
static u8 S6E3HAC_RDDSM[S6E3HAC_RDDSM_LEN];
static u8 S6E3HAC_ERR[S6E3HAC_ERR_LEN];
static u8 S6E3HAC_ERR_FG[S6E3HAC_ERR_FG_LEN];
static u8 S6E3HAC_DSI_ERR[S6E3HAC_DSI_ERR_LEN];
static u8 S6E3HAC_SELF_DIAG[S6E3HAC_SELF_DIAG_LEN];
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static u8 S6E3HAC_CMDLOG[S6E3HAC_CMDLOG_LEN];
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
static u8 S6E3HAC_POC_CHKSUM[S6E3HAC_POC_CHKSUM_LEN];
static u8 S6E3HAC_POC_CTRL[S6E3HAC_POC_CTRL_LEN];
static u8 S6E3HAC_POC_DATA[S6E3HAC_POC_DATA_LEN];
static u8 S6E3HAC_FLASH_MCD[S6E3HAC_FLASH_MCD_LEN];
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
static u8 S6E3HAC_POC_SPI_READ[S6E3HAC_POC_SPI_READ_LEN];
static u8 S6E3HAC_POC_SPI_STATUS1[S6E3HAC_POC_SPI_STATUS1_LEN];
static u8 S6E3HAC_POC_SPI_STATUS2[S6E3HAC_POC_SPI_STATUS2_LEN];
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
static u8 S6E3HAC_POC_MCA_CHKSUM[S6E3HAC_POC_MCA_CHKSUM_LEN];
#endif

#ifdef CONFIG_SUPPORT_GM2_FLASH
static u8 S6E3HAC_GM2_FLASH_VBIAS1[S6E3HAC_GM2_FLASH_VBIAS1_LEN];
static u8 S6E3HAC_GM2_FLASH_VBIAS2[S6E3HAC_GM2_FLASH_VBIAS2_LEN];
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static u8 S6E3HAC_GRAM_CHECKSUM[S6E3HAC_GRAM_CHECKSUM_LEN];
#endif
static u8 S6E3HAC_MCD_RESISTANCE[S6E3HAC_MCD_RESISTANCE_LEN];
#ifdef CONFIG_SUPPORT_CCD_TEST
static u8 S6E3HAC_CCD_STATE[S6E3HAC_CCD_STATE_LEN];
static u8 S6E3HAC_CCD_CHKSUM_PASS[S6E3HAC_CCD_STATE_LEN] = { 0x00 };
#endif
static u8 S6E3HAC_SELF_MASK_CHECKSUM[S6E3HAC_SELF_MASK_CHECKSUM_LEN];
static u8 S6E3HAC_SELF_MASK_CRC[S6E3HAC_SELF_MASK_CRC_LEN];

#ifdef CONFIG_SUPPORT_MAFPC
static u8 S6E3HAC_MAFPC[S6E3HAC_MAFPC_LEN];
static u8 S6E3HAC_MAFPC_FLASH[S6E3HAC_MAFPC_FLASH_LEN];
static u8 S6E3HAC_MAFPC_CRC[S6E3HAC_MAFPC_CRC_LEN];
#endif
static u8 S6E3HAC_VFP_NS[S6E3HAC_VFP_NS_LEN];
static u8 S6E3HAC_VFP_HS[S6E3HAC_VFP_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_0_NS[S6E3HAC_GAMMA_MTP_0_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_1_NS[S6E3HAC_GAMMA_MTP_1_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_2_NS[S6E3HAC_GAMMA_MTP_2_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_3_NS[S6E3HAC_GAMMA_MTP_3_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_4_NS[S6E3HAC_GAMMA_MTP_4_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_5_NS[S6E3HAC_GAMMA_MTP_5_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_6_NS[S6E3HAC_GAMMA_MTP_6_NS_LEN];
static u8 S6E3HAC_GAMMA_MTP_0_HS[S6E3HAC_GAMMA_MTP_0_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_1_HS[S6E3HAC_GAMMA_MTP_1_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_2_HS[S6E3HAC_GAMMA_MTP_2_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_3_HS[S6E3HAC_GAMMA_MTP_3_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_4_HS[S6E3HAC_GAMMA_MTP_4_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_5_HS[S6E3HAC_GAMMA_MTP_5_HS_LEN];
static u8 S6E3HAC_GAMMA_MTP_6_HS[S6E3HAC_GAMMA_MTP_6_HS_LEN];

static struct rdinfo s6e3hac_rditbl[] = {
	[READ_ID] = RDINFO_INIT(id, DSI_PKT_TYPE_RD, S6E3HAC_ID_REG, S6E3HAC_ID_OFS, S6E3HAC_ID_LEN),
	[READ_COORDINATE] = RDINFO_INIT(coordinate, DSI_PKT_TYPE_RD, S6E3HAC_COORDINATE_REG, S6E3HAC_COORDINATE_OFS, S6E3HAC_COORDINATE_LEN),
	[READ_CODE] = RDINFO_INIT(code, DSI_PKT_TYPE_RD, S6E3HAC_CODE_REG, S6E3HAC_CODE_OFS, S6E3HAC_CODE_LEN),
	[READ_ELVSS] = RDINFO_INIT(elvss, DSI_PKT_TYPE_RD, S6E3HAC_ELVSS_REG, S6E3HAC_ELVSS_OFS, S6E3HAC_ELVSS_LEN),
	[READ_ELVSS_TEMP_0] = RDINFO_INIT(elvss_temp_0, DSI_PKT_TYPE_RD, S6E3HAC_ELVSS_TEMP_0_REG, S6E3HAC_ELVSS_TEMP_0_OFS, S6E3HAC_ELVSS_TEMP_0_LEN),
	[READ_ELVSS_TEMP_1] = RDINFO_INIT(elvss_temp_1, DSI_PKT_TYPE_RD, S6E3HAC_ELVSS_TEMP_1_REG, S6E3HAC_ELVSS_TEMP_1_OFS, S6E3HAC_ELVSS_TEMP_1_LEN),
	[READ_MTP] = RDINFO_INIT(mtp, DSI_PKT_TYPE_RD, S6E3HAC_MTP_REG, S6E3HAC_MTP_OFS, S6E3HAC_MTP_LEN),
	[READ_DATE] = RDINFO_INIT(date, DSI_PKT_TYPE_RD, S6E3HAC_DATE_REG, S6E3HAC_DATE_OFS, S6E3HAC_DATE_LEN),
	[READ_OCTA_ID] = RDINFO_INIT(octa_id, DSI_PKT_TYPE_RD, S6E3HAC_OCTA_ID_REG, S6E3HAC_OCTA_ID_OFS, S6E3HAC_OCTA_ID_LEN),
	[READ_VBIAS1] = RDINFO_INIT(vbias1, DSI_PKT_TYPE_RD, S6E3HAC_VBIAS1_REG, S6E3HAC_VBIAS1_OFS, S6E3HAC_VBIAS1_LEN),
	[READ_VBIAS2] = RDINFO_INIT(vbias2, DSI_PKT_TYPE_RD, S6E3HAC_VBIAS2_REG, S6E3HAC_VBIAS2_OFS, S6E3HAC_VBIAS2_LEN),
	/* for brightness debugging */
	[READ_GAMMA] = RDINFO_INIT(gamma, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_REG, S6E3HAC_GAMMA_OFS, S6E3HAC_GAMMA_LEN),
	[READ_VINT] = RDINFO_INIT(vint, DSI_PKT_TYPE_RD, S6E3HAC_VINT_REG, S6E3HAC_VINT_OFS, S6E3HAC_VINT_LEN),
	[READ_ELVSS_T] = RDINFO_INIT(elvss_t, DSI_PKT_TYPE_RD, S6E3HAC_ELVSS_T_REG, S6E3HAC_ELVSS_T_OFS, S6E3HAC_ELVSS_T_LEN),
	[READ_IRC] = RDINFO_INIT(irc, DSI_PKT_TYPE_RD, S6E3HAC_IRC_REG, S6E3HAC_IRC_OFS, S6E3HAC_IRC_LEN),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	[READ_COPR_SPI] = RDINFO_INIT(copr_spi, SPI_PKT_TYPE_RD, S6E3HAC_COPR_SPI_REG, S6E3HAC_COPR_SPI_OFS, S6E3HAC_COPR_SPI_LEN),
	[READ_COPR_DSI] = RDINFO_INIT(copr_dsi, DSI_PKT_TYPE_RD, S6E3HAC_COPR_DSI_REG, S6E3HAC_COPR_DSI_OFS, S6E3HAC_COPR_DSI_LEN),
#endif
	[READ_CHIP_ID] = RDINFO_INIT(chip_id, DSI_PKT_TYPE_RD, S6E3HAC_CHIP_ID_REG, S6E3HAC_CHIP_ID_OFS, S6E3HAC_CHIP_ID_LEN),
	[READ_RDDPM] = RDINFO_INIT(rddpm, DSI_PKT_TYPE_RD, S6E3HAC_RDDPM_REG, S6E3HAC_RDDPM_OFS, S6E3HAC_RDDPM_LEN),
	[READ_RDDSM] = RDINFO_INIT(rddsm, DSI_PKT_TYPE_RD, S6E3HAC_RDDSM_REG, S6E3HAC_RDDSM_OFS, S6E3HAC_RDDSM_LEN),
	[READ_ERR] = RDINFO_INIT(err, DSI_PKT_TYPE_RD, S6E3HAC_ERR_REG, S6E3HAC_ERR_OFS, S6E3HAC_ERR_LEN),
	[READ_ERR_FG] = RDINFO_INIT(err_fg, DSI_PKT_TYPE_RD, S6E3HAC_ERR_FG_REG, S6E3HAC_ERR_FG_OFS, S6E3HAC_ERR_FG_LEN),
	[READ_DSI_ERR] = RDINFO_INIT(dsi_err, DSI_PKT_TYPE_RD, S6E3HAC_DSI_ERR_REG, S6E3HAC_DSI_ERR_OFS, S6E3HAC_DSI_ERR_LEN),
	[READ_SELF_DIAG] = RDINFO_INIT(self_diag, DSI_PKT_TYPE_RD, S6E3HAC_SELF_DIAG_REG, S6E3HAC_SELF_DIAG_OFS, S6E3HAC_SELF_DIAG_LEN),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[READ_CMDLOG] = RDINFO_INIT(cmdlog, DSI_PKT_TYPE_RD, S6E3HAC_CMDLOG_REG, S6E3HAC_CMDLOG_OFS, S6E3HAC_CMDLOG_LEN),
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	[READ_POC_CHKSUM] = RDINFO_INIT(poc_chksum, DSI_PKT_TYPE_RD, S6E3HAC_POC_CHKSUM_REG, S6E3HAC_POC_CHKSUM_OFS, S6E3HAC_POC_CHKSUM_LEN),
	[READ_POC_CTRL] = RDINFO_INIT(poc_ctrl, DSI_PKT_TYPE_RD, S6E3HAC_POC_CTRL_REG, S6E3HAC_POC_CTRL_OFS, S6E3HAC_POC_CTRL_LEN),
	[READ_POC_DATA] = RDINFO_INIT(poc_data, DSI_PKT_TYPE_RD, S6E3HAC_POC_DATA_REG, S6E3HAC_POC_DATA_OFS, S6E3HAC_POC_DATA_LEN),
	[READ_FLASH_MCD] = RDINFO_INIT(flash_mcd, DSI_PKT_TYPE_RD_POC, S6E3HAC_FLASH_MCD_ADDR, S6E3HAC_FLASH_MCD1_R_OFS, S6E3HAC_FLASH_MCD_LEN),
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	[READ_POC_SPI_READ] = RDINFO_INIT(poc_spi_read, SPI_PKT_TYPE_RD, S6E3HAC_POC_SPI_READ_REG, 0, S6E3HAC_POC_SPI_READ_LEN),
	[READ_POC_SPI_STATUS1] = RDINFO_INIT(poc_spi_status1, SPI_PKT_TYPE_RD, S6E3HAC_POC_SPI_STATUS1_REG, 0, S6E3HAC_POC_SPI_STATUS1_LEN),
	[READ_POC_SPI_STATUS2] = RDINFO_INIT(poc_spi_status2, SPI_PKT_TYPE_RD, S6E3HAC_POC_SPI_STATUS2_REG, 0, S6E3HAC_POC_SPI_STATUS2_LEN),
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
	[READ_POC_MCA_CHKSUM] = RDINFO_INIT(poc_mca_chksum, DSI_PKT_TYPE_RD, S6E3HAC_POC_MCA_CHKSUM_REG, S6E3HAC_POC_MCA_CHKSUM_OFS, S6E3HAC_POC_MCA_CHKSUM_LEN),
#endif
#ifdef CONFIG_SUPPORT_GM2_FLASH
	[READ_GM2_FLASH_VBIAS1] = RDINFO_INIT(gm2_flash_vbias1, DSI_PKT_TYPE_RD_POC, S6E3HAC_GM2_FLASH_VBIAS1_ADDR, S6E3HAC_GM2_FLASH_VBIAS1_OFS, S6E3HAC_GM2_FLASH_VBIAS1_LEN),
	[READ_GM2_FLASH_VBIAS2] = RDINFO_INIT(gm2_flash_vbias2, DSI_PKT_TYPE_RD_POC, S6E3HAC_GM2_FLASH_VBIAS2_ADDR, S6E3HAC_GM2_FLASH_VBIAS2_OFS, S6E3HAC_GM2_FLASH_VBIAS2_LEN),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[READ_GRAM_CHECKSUM] = RDINFO_INIT(gram_checksum, DSI_PKT_TYPE_RD, S6E3HAC_GRAM_CHECKSUM_REG, S6E3HAC_GRAM_CHECKSUM_OFS, S6E3HAC_GRAM_CHECKSUM_LEN),
#endif
	[READ_MCD_RESISTANCE] = RDINFO_INIT(mcd_resistance, DSI_PKT_TYPE_RD, S6E3HAC_MCD_RESISTANCE_REG, S6E3HAC_MCD_RESISTANCE_OFS, S6E3HAC_MCD_RESISTANCE_LEN),
#ifdef CONFIG_SUPPORT_CCD_TEST
	[READ_CCD_STATE] = RDINFO_INIT(ccd_state, DSI_PKT_TYPE_RD, S6E3HAC_CCD_STATE_REG, S6E3HAC_CCD_STATE_OFS, S6E3HAC_CCD_STATE_LEN),
#endif
	[READ_SELF_MASK_CHECKSUM] = RDINFO_INIT(self_mask_checksum, DSI_PKT_TYPE_RD, S6E3HAC_SELF_MASK_CHECKSUM_REG, S6E3HAC_SELF_MASK_CHECKSUM_OFS, S6E3HAC_SELF_MASK_CHECKSUM_LEN),
	[READ_SELF_MASK_CRC] = RDINFO_INIT(self_mask_crc, DSI_PKT_TYPE_RD, S6E3HAC_SELF_MASK_CRC_REG, S6E3HAC_SELF_MASK_CRC_OFS, S6E3HAC_SELF_MASK_CRC_LEN),
#ifdef CONFIG_SUPPORT_MAFPC
	[READ_MAFPC] = RDINFO_INIT(mafpc, DSI_PKT_TYPE_RD, S6E3HAC_MAFPC_REG, S6E3HAC_MAFPC_OFS, S6E3HAC_MAFPC_LEN),
	[READ_MAFPC_FLASH] = RDINFO_INIT(mafpc_flash, DSI_PKT_TYPE_RD, S6E3HAC_MAFPC_FLASH_REG, S6E3HAC_MAFPC_FLASH_OFS, S6E3HAC_MAFPC_FLASH_LEN),
	[READ_MAFPC_CRC] = RDINFO_INIT(mafpc_crc, DSI_PKT_TYPE_RD, S6E3HAC_MAFPC_CRC_REG, S6E3HAC_MAFPC_CRC_OFS, S6E3HAC_MAFPC_CRC_LEN),
#endif
	[READ_VFP_NS] = RDINFO_INIT(vfp_ns, DSI_PKT_TYPE_RD, S6E3HAC_VFP_NS_REG, S6E3HAC_VFP_NS_OFS, S6E3HAC_VFP_NS_LEN),
	[READ_VFP_HS] = RDINFO_INIT(vfp_hs, DSI_PKT_TYPE_RD, S6E3HAC_VFP_HS_REG, S6E3HAC_VFP_HS_OFS, S6E3HAC_VFP_HS_LEN),
	[READ_GAMMA_MTP_0_NS] = RDINFO_INIT(gamma_mtp_0_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_0_NS_REG, S6E3HAC_GAMMA_MTP_0_NS_OFS, S6E3HAC_GAMMA_MTP_0_NS_LEN),
	[READ_GAMMA_MTP_1_NS] = RDINFO_INIT(gamma_mtp_1_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_1_NS_REG, S6E3HAC_GAMMA_MTP_1_NS_OFS, S6E3HAC_GAMMA_MTP_1_NS_LEN),
	[READ_GAMMA_MTP_2_NS] = RDINFO_INIT(gamma_mtp_2_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_2_NS_REG, S6E3HAC_GAMMA_MTP_2_NS_OFS, S6E3HAC_GAMMA_MTP_2_NS_LEN),
	[READ_GAMMA_MTP_3_NS] = RDINFO_INIT(gamma_mtp_3_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_3_NS_REG, S6E3HAC_GAMMA_MTP_3_NS_OFS, S6E3HAC_GAMMA_MTP_3_NS_LEN),
	[READ_GAMMA_MTP_4_NS] = RDINFO_INIT(gamma_mtp_4_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_4_NS_REG, S6E3HAC_GAMMA_MTP_4_NS_OFS, S6E3HAC_GAMMA_MTP_4_NS_LEN),
	[READ_GAMMA_MTP_5_NS] = RDINFO_INIT(gamma_mtp_5_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_5_NS_REG, S6E3HAC_GAMMA_MTP_5_NS_OFS, S6E3HAC_GAMMA_MTP_5_NS_LEN),
	[READ_GAMMA_MTP_6_NS] = RDINFO_INIT(gamma_mtp_6_ns, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_6_NS_REG, S6E3HAC_GAMMA_MTP_6_NS_OFS, S6E3HAC_GAMMA_MTP_6_NS_LEN),
	[READ_GAMMA_MTP_0_HS] = RDINFO_INIT(gamma_mtp_0_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_0_HS_REG, S6E3HAC_GAMMA_MTP_0_HS_OFS, S6E3HAC_GAMMA_MTP_0_HS_LEN),
	[READ_GAMMA_MTP_1_HS] = RDINFO_INIT(gamma_mtp_1_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_1_HS_REG, S6E3HAC_GAMMA_MTP_1_HS_OFS, S6E3HAC_GAMMA_MTP_1_HS_LEN),
	[READ_GAMMA_MTP_2_HS] = RDINFO_INIT(gamma_mtp_2_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_2_HS_REG, S6E3HAC_GAMMA_MTP_2_HS_OFS, S6E3HAC_GAMMA_MTP_2_HS_LEN),
	[READ_GAMMA_MTP_3_HS] = RDINFO_INIT(gamma_mtp_3_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_3_HS_REG, S6E3HAC_GAMMA_MTP_3_HS_OFS, S6E3HAC_GAMMA_MTP_3_HS_LEN),
	[READ_GAMMA_MTP_4_HS] = RDINFO_INIT(gamma_mtp_4_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_4_HS_REG, S6E3HAC_GAMMA_MTP_4_HS_OFS, S6E3HAC_GAMMA_MTP_4_HS_LEN),
	[READ_GAMMA_MTP_5_HS] = RDINFO_INIT(gamma_mtp_5_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_5_HS_REG, S6E3HAC_GAMMA_MTP_5_HS_OFS, S6E3HAC_GAMMA_MTP_5_HS_LEN),
	[READ_GAMMA_MTP_6_HS] = RDINFO_INIT(gamma_mtp_6_hs, DSI_PKT_TYPE_RD, S6E3HAC_GAMMA_MTP_6_HS_REG, S6E3HAC_GAMMA_MTP_6_HS_OFS, S6E3HAC_GAMMA_MTP_6_HS_LEN),
};

static DEFINE_RESUI(id, &s6e3hac_rditbl[READ_ID], 0);
static DEFINE_RESUI(coordinate, &s6e3hac_rditbl[READ_COORDINATE], 0);
static DEFINE_RESUI(code, &s6e3hac_rditbl[READ_CODE], 0);
static DEFINE_RESUI(elvss, &s6e3hac_rditbl[READ_ELVSS], 0);
static DEFINE_RESUI(elvss_temp_0, &s6e3hac_rditbl[READ_ELVSS_TEMP_0], 0);
static DEFINE_RESUI(elvss_temp_1, &s6e3hac_rditbl[READ_ELVSS_TEMP_1], 0);
static DEFINE_RESUI(mtp, &s6e3hac_rditbl[READ_MTP], 0);
static DEFINE_RESUI(vbias1, &s6e3hac_rditbl[READ_VBIAS1], 0);
static DEFINE_RESUI(vbias2, &s6e3hac_rditbl[READ_VBIAS2], 0);

static DEFINE_RESUI(date, &s6e3hac_rditbl[READ_DATE], 0);
static DEFINE_RESUI(octa_id, &s6e3hac_rditbl[READ_OCTA_ID], 0);
/* for brightness debugging */
static DEFINE_RESUI(gamma, &s6e3hac_rditbl[READ_GAMMA], 0);
static DEFINE_RESUI(vint, &s6e3hac_rditbl[READ_VINT], 0);
static DEFINE_RESUI(elvss_t, &s6e3hac_rditbl[READ_ELVSS_T], 0);
static DEFINE_RESUI(irc, &s6e3hac_rditbl[READ_IRC], 0);
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
static DEFINE_RESUI(copr_spi, &s6e3hac_rditbl[READ_COPR_SPI], 0);
static DEFINE_RESUI(copr_dsi, &s6e3hac_rditbl[READ_COPR_DSI], 0);
#endif
static DEFINE_RESUI(chip_id, &s6e3hac_rditbl[READ_CHIP_ID], 0);
static DEFINE_RESUI(rddpm, &s6e3hac_rditbl[READ_RDDPM], 0);
static DEFINE_RESUI(rddsm, &s6e3hac_rditbl[READ_RDDSM], 0);
static DEFINE_RESUI(err, &s6e3hac_rditbl[READ_ERR], 0);
static DEFINE_RESUI(err_fg, &s6e3hac_rditbl[READ_ERR_FG], 0);
static DEFINE_RESUI(dsi_err, &s6e3hac_rditbl[READ_DSI_ERR], 0);
static DEFINE_RESUI(self_diag, &s6e3hac_rditbl[READ_SELF_DIAG], 0);

#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static DEFINE_RESUI(cmdlog, &s6e3hac_rditbl[READ_CMDLOG], 0);
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
static DEFINE_RESUI(poc_chksum, &s6e3hac_rditbl[READ_POC_CHKSUM], 0);
static DEFINE_RESUI(poc_ctrl, &s6e3hac_rditbl[READ_POC_CTRL], 0);
static DEFINE_RESUI(poc_data, &s6e3hac_rditbl[READ_POC_DATA], 0);
static DEFINE_RESUI(flash_mcd, &s6e3hac_rditbl[READ_FLASH_MCD], 0);
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
static DEFINE_RESUI(poc_spi_read, &s6e3hac_rditbl[READ_POC_SPI_READ], 0);
static DEFINE_RESUI(poc_spi_status1, &s6e3hac_rditbl[READ_POC_SPI_STATUS1], 0);
static DEFINE_RESUI(poc_spi_status2, &s6e3hac_rditbl[READ_POC_SPI_STATUS2], 0);
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
static DEFINE_RESUI(poc_mca_chksum, &s6e3hac_rditbl[READ_POC_MCA_CHKSUM], 0);
#endif

#ifdef CONFIG_SUPPORT_GM2_FLASH
static DEFINE_RESUI(gm2_flash_vbias1, &s6e3hac_rditbl[READ_GM2_FLASH_VBIAS1], 0);
static DEFINE_RESUI(gm2_flash_vbias2, &s6e3hac_rditbl[READ_GM2_FLASH_VBIAS2], 0);
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static DEFINE_RESUI(gram_checksum, &s6e3hac_rditbl[READ_GRAM_CHECKSUM], 0);
#endif
#ifdef CONFIG_SUPPORT_CCD_TEST
static DEFINE_RESUI(ccd_state, &s6e3hac_rditbl[READ_CCD_STATE], 0);
#endif

static DEFINE_RESUI(mcd_resistance, &s6e3hac_rditbl[READ_MCD_RESISTANCE], 0);
static DEFINE_RESUI(self_mask_checksum, &s6e3hac_rditbl[READ_SELF_MASK_CHECKSUM], 0);
static DEFINE_RESUI(self_mask_crc, &s6e3hac_rditbl[READ_SELF_MASK_CRC], 0);

#ifdef CONFIG_SUPPORT_MAFPC
static DEFINE_RESUI(mafpc, &s6e3hac_rditbl[READ_MAFPC], 0);
static DEFINE_RESUI(mafpc_flash, &s6e3hac_rditbl[READ_MAFPC_FLASH], 0);
static DEFINE_RESUI(mafpc_crc, &s6e3hac_rditbl[READ_MAFPC_CRC], 0);
#endif
static DEFINE_RESUI(vfp_ns, &s6e3hac_rditbl[READ_VFP_NS], 0);
static DEFINE_RESUI(vfp_hs, &s6e3hac_rditbl[READ_VFP_HS], 0);
static DEFINE_RESUI(gamma_mtp_0_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_0_NS], 0);
static DEFINE_RESUI(gamma_mtp_1_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_1_NS], 0);
static DEFINE_RESUI(gamma_mtp_2_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_2_NS], 0);
static DEFINE_RESUI(gamma_mtp_3_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_3_NS], 0);
static DEFINE_RESUI(gamma_mtp_4_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_4_NS], 0);
static DEFINE_RESUI(gamma_mtp_5_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_5_NS], 0);
static DEFINE_RESUI(gamma_mtp_6_ns, &s6e3hac_rditbl[READ_GAMMA_MTP_6_NS], 0);
static DEFINE_RESUI(gamma_mtp_0_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_0_HS], 0);
static DEFINE_RESUI(gamma_mtp_1_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_1_HS], 0);
static DEFINE_RESUI(gamma_mtp_2_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_2_HS], 0);
static DEFINE_RESUI(gamma_mtp_3_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_3_HS], 0);
static DEFINE_RESUI(gamma_mtp_4_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_4_HS], 0);
static DEFINE_RESUI(gamma_mtp_5_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_5_HS], 0);
static DEFINE_RESUI(gamma_mtp_6_hs, &s6e3hac_rditbl[READ_GAMMA_MTP_6_HS], 0);

static struct resinfo s6e3hac_restbl[] = {
	[RES_ID] = RESINFO_INIT(id, S6E3HAC_ID, RESUI(id)),
	[RES_COORDINATE] = RESINFO_INIT(coordinate, S6E3HAC_COORDINATE, RESUI(coordinate)),
	[RES_CODE] = RESINFO_INIT(code, S6E3HAC_CODE, RESUI(code)),
	[RES_ELVSS] = RESINFO_INIT(elvss, S6E3HAC_ELVSS, RESUI(elvss)),
	[RES_ELVSS_TEMP_0] = RESINFO_INIT(elvss_temp_0, S6E3HAC_ELVSS_TEMP_0, RESUI(elvss_temp_0)),
	[RES_ELVSS_TEMP_1] = RESINFO_INIT(elvss_temp_1, S6E3HAC_ELVSS_TEMP_1, RESUI(elvss_temp_1)),
	[RES_MTP] = RESINFO_INIT(mtp, S6E3HAC_MTP, RESUI(mtp)),
	[RES_DATE] = RESINFO_INIT(date, S6E3HAC_DATE, RESUI(date)),
	[RES_OCTA_ID] = RESINFO_INIT(octa_id, S6E3HAC_OCTA_ID, RESUI(octa_id)),
	[RES_VBIAS1] = RESINFO_INIT(vbias1, S6E3HAC_VBIAS1, RESUI(vbias1)),
	[RES_VBIAS2] = RESINFO_INIT(vbias2, S6E3HAC_VBIAS2, RESUI(vbias2)),
	/* for brightness debugging */
	[RES_GAMMA] = RESINFO_INIT(gamma, S6E3HAC_GAMMA, RESUI(gamma)),
	[RES_VINT] = RESINFO_INIT(vint, S6E3HAC_VINT, RESUI(vint)),
	[RES_ELVSS_T] = RESINFO_INIT(elvss_t, S6E3HAC_ELVSS_T, RESUI(elvss_t)),
	[RES_IRC] = RESINFO_INIT(irc, S6E3HAC_IRC, RESUI(irc)),
#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
	[RES_COPR_SPI] = RESINFO_INIT(copr_spi, S6E3HAC_COPR_SPI, RESUI(copr_spi)),
	[RES_COPR_DSI] = RESINFO_INIT(copr_dsi, S6E3HAC_COPR_DSI, RESUI(copr_dsi)),
#endif
	[RES_CHIP_ID] = RESINFO_INIT(chip_id, S6E3HAC_CHIP_ID, RESUI(chip_id)),
	[RES_RDDPM] = RESINFO_INIT(rddpm, S6E3HAC_RDDPM, RESUI(rddpm)),
	[RES_RDDSM] = RESINFO_INIT(rddsm, S6E3HAC_RDDSM, RESUI(rddsm)),
	[RES_ERR] = RESINFO_INIT(err, S6E3HAC_ERR, RESUI(err)),
	[RES_ERR_FG] = RESINFO_INIT(err_fg, S6E3HAC_ERR_FG, RESUI(err_fg)),
	[RES_DSI_ERR] = RESINFO_INIT(dsi_err, S6E3HAC_DSI_ERR, RESUI(dsi_err)),
	[RES_SELF_DIAG] = RESINFO_INIT(self_diag, S6E3HAC_SELF_DIAG, RESUI(self_diag)),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[RES_CMDLOG] = RESINFO_INIT(cmdlog, S6E3HAC_CMDLOG, RESUI(cmdlog)),
#endif
#ifdef CONFIG_SUPPORT_DDI_FLASH
	[RES_POC_CHKSUM] = RESINFO_INIT(poc_chksum, S6E3HAC_POC_CHKSUM, RESUI(poc_chksum)),
	[RES_POC_CTRL] = RESINFO_INIT(poc_ctrl, S6E3HAC_POC_CTRL, RESUI(poc_ctrl)),
	[RES_POC_DATA] = RESINFO_INIT(poc_data, S6E3HAC_POC_DATA, RESUI(poc_data)),
	[RES_FLASH_MCD] = RESINFO_INIT(flash_mcd, S6E3HAC_FLASH_MCD, RESUI(flash_mcd)),
#endif
#ifdef CONFIG_SUPPORT_POC_SPI
	[RES_POC_SPI_READ] = RESINFO_INIT(poc_spi_read, S6E3HAC_POC_SPI_READ, RESUI(poc_spi_read)),
	[RES_POC_SPI_STATUS1] = RESINFO_INIT(poc_spi_status1, S6E3HAC_POC_SPI_STATUS1, RESUI(poc_spi_status1)),
	[RES_POC_SPI_STATUS2] = RESINFO_INIT(poc_spi_status2, S6E3HAC_POC_SPI_STATUS2, RESUI(poc_spi_status2)),
#endif
#ifdef CONFIG_SUPPORT_POC_FLASH
	[RES_POC_MCA_CHKSUM] = RESINFO_INIT(poc_mca_chksum, S6E3HAC_POC_MCA_CHKSUM, RESUI(poc_mca_chksum)),
#endif
#ifdef CONFIG_SUPPORT_GM2_FLASH
	[RES_GM2_FLASH_VBIAS1] = RESINFO_INIT(gm2_flash_vbias1, S6E3HAC_GM2_FLASH_VBIAS1, RESUI(gm2_flash_vbias1)),
	[RES_GM2_FLASH_VBIAS2] = RESINFO_INIT(gm2_flash_vbias2, S6E3HAC_GM2_FLASH_VBIAS2, RESUI(gm2_flash_vbias2)),
#endif
#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
	[RES_GRAM_CHECKSUM] = RESINFO_INIT(gram_checksum, S6E3HAC_GRAM_CHECKSUM, RESUI(gram_checksum)),
#endif
	[RES_MCD_RESISTANCE] = RESINFO_INIT(mcd_resistance, S6E3HAC_MCD_RESISTANCE, RESUI(mcd_resistance)),
#ifdef CONFIG_SUPPORT_CCD_TEST
	[RES_CCD_STATE] = RESINFO_INIT(ccd_state, S6E3HAC_CCD_STATE, RESUI(ccd_state)),
	[RES_CCD_CHKSUM_PASS] = {
		.name = "ccd_chksum_pass",
		.type = CMD_TYPE_RES,
		.state = RES_UNINITIALIZED,
		.data = S6E3HAC_CCD_CHKSUM_PASS,
		.dlen = ARRAY_SIZE(S6E3HAC_CCD_CHKSUM_PASS),
		.resui = NULL,
		.nr_resui = 0,
	},
#endif
	[RES_SELF_MASK_CHECKSUM] = RESINFO_INIT(self_mask_checksum, S6E3HAC_SELF_MASK_CHECKSUM, RESUI(self_mask_checksum)),
	[RES_SELF_MASK_CRC] = RESINFO_INIT(self_mask_crc, S6E3HAC_SELF_MASK_CRC, RESUI(self_mask_crc)),
#ifdef CONFIG_SUPPORT_MAFPC
	[RES_MAFPC] = RESINFO_INIT(mafpc, S6E3HAC_MAFPC, RESUI(mafpc)),
	[RES_MAFPC_FLASH] = RESINFO_INIT(mafpc_flash, S6E3HAC_MAFPC_FLASH, RESUI(mafpc_flash)),
	[RES_MAFPC_CRC] = RESINFO_INIT(mafpc_crc, S6E3HAC_MAFPC_CRC, RESUI(mafpc_crc)),
#endif
	[RES_VFP_NS] = RESINFO_INIT(vfp_ns, S6E3HAC_VFP_NS, RESUI(vfp_ns)),
	[RES_VFP_HS] = RESINFO_INIT(vfp_hs, S6E3HAC_VFP_HS, RESUI(vfp_hs)),
	[RES_GAMMA_MTP_0_NS] = RESINFO_INIT(gamma_mtp_0_ns, S6E3HAC_GAMMA_MTP_0_NS, RESUI(gamma_mtp_0_ns)),
	[RES_GAMMA_MTP_1_NS] = RESINFO_INIT(gamma_mtp_1_ns, S6E3HAC_GAMMA_MTP_1_NS, RESUI(gamma_mtp_1_ns)),
	[RES_GAMMA_MTP_2_NS] = RESINFO_INIT(gamma_mtp_2_ns, S6E3HAC_GAMMA_MTP_2_NS, RESUI(gamma_mtp_2_ns)),
	[RES_GAMMA_MTP_3_NS] = RESINFO_INIT(gamma_mtp_3_ns, S6E3HAC_GAMMA_MTP_3_NS, RESUI(gamma_mtp_3_ns)),
	[RES_GAMMA_MTP_4_NS] = RESINFO_INIT(gamma_mtp_4_ns, S6E3HAC_GAMMA_MTP_4_NS, RESUI(gamma_mtp_4_ns)),
	[RES_GAMMA_MTP_5_NS] = RESINFO_INIT(gamma_mtp_5_ns, S6E3HAC_GAMMA_MTP_5_NS, RESUI(gamma_mtp_5_ns)),
	[RES_GAMMA_MTP_6_NS] = RESINFO_INIT(gamma_mtp_6_ns, S6E3HAC_GAMMA_MTP_6_NS, RESUI(gamma_mtp_6_ns)),
	[RES_GAMMA_MTP_0_HS] = RESINFO_INIT(gamma_mtp_0_hs, S6E3HAC_GAMMA_MTP_0_HS, RESUI(gamma_mtp_0_hs)),
	[RES_GAMMA_MTP_1_HS] = RESINFO_INIT(gamma_mtp_1_hs, S6E3HAC_GAMMA_MTP_1_HS, RESUI(gamma_mtp_1_hs)),
	[RES_GAMMA_MTP_2_HS] = RESINFO_INIT(gamma_mtp_2_hs, S6E3HAC_GAMMA_MTP_2_HS, RESUI(gamma_mtp_2_hs)),
	[RES_GAMMA_MTP_3_HS] = RESINFO_INIT(gamma_mtp_3_hs, S6E3HAC_GAMMA_MTP_3_HS, RESUI(gamma_mtp_3_hs)),
	[RES_GAMMA_MTP_4_HS] = RESINFO_INIT(gamma_mtp_4_hs, S6E3HAC_GAMMA_MTP_4_HS, RESUI(gamma_mtp_4_hs)),
	[RES_GAMMA_MTP_5_HS] = RESINFO_INIT(gamma_mtp_5_hs, S6E3HAC_GAMMA_MTP_5_HS, RESUI(gamma_mtp_5_hs)),
	[RES_GAMMA_MTP_6_HS] = RESINFO_INIT(gamma_mtp_6_hs, S6E3HAC_GAMMA_MTP_6_HS, RESUI(gamma_mtp_6_hs)),
};

enum {
	DUMP_RDDPM = 0,
	DUMP_RDDSM,
	DUMP_ERR,
	DUMP_ERR_FG,
	DUMP_DSI_ERR,
	DUMP_SELF_DIAG,
	DUMP_SELF_MASK_CRC,
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	DUMP_CMDLOG,
#endif
#ifdef CONFIG_SUPPORT_MAFPC
	DUMP_MAFPC,
	DUMP_MAFPC_FLASH,
#endif
};

static void show_rddpm(struct dumpinfo *info);
static void show_rddsm(struct dumpinfo *info);
static void show_err(struct dumpinfo *info);
static void show_err_fg(struct dumpinfo *info);
static void show_dsi_err(struct dumpinfo *info);
static void show_self_diag(struct dumpinfo *info);
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
static void show_cmdlog(struct dumpinfo *info);
#endif
static void show_self_mask_crc(struct dumpinfo *info);
#ifdef CONFIG_SUPPORT_MAFPC
static void show_mafpc_log(struct dumpinfo *info);
static void show_mafpc_flash_log(struct dumpinfo *info);
#endif

static struct dumpinfo s6e3hac_dmptbl[] = {
	[DUMP_RDDPM] = DUMPINFO_INIT(rddpm, &s6e3hac_restbl[RES_RDDPM], show_rddpm),
	[DUMP_RDDSM] = DUMPINFO_INIT(rddsm, &s6e3hac_restbl[RES_RDDSM], show_rddsm),
	[DUMP_ERR] = DUMPINFO_INIT(err, &s6e3hac_restbl[RES_ERR], show_err),
	[DUMP_ERR_FG] = DUMPINFO_INIT(err_fg, &s6e3hac_restbl[RES_ERR_FG], show_err_fg),
	[DUMP_DSI_ERR] = DUMPINFO_INIT(dsi_err, &s6e3hac_restbl[RES_DSI_ERR], show_dsi_err),
	[DUMP_SELF_DIAG] = DUMPINFO_INIT(self_diag, &s6e3hac_restbl[RES_SELF_DIAG], show_self_diag),
#ifdef CONFIG_SUPPORT_DDI_CMDLOG
	[DUMP_CMDLOG] = DUMPINFO_INIT(cmdlog, &s6e3hac_restbl[RES_CMDLOG], show_cmdlog),
#endif
	[DUMP_SELF_MASK_CRC] = DUMPINFO_INIT(self_mask_crc, &s6e3hac_restbl[RES_SELF_MASK_CRC], show_self_mask_crc),
#ifdef CONFIG_SUPPORT_MAFPC
	[DUMP_MAFPC] = DUMPINFO_INIT(mafpc, &s6e3hac_restbl[RES_MAFPC], show_mafpc_log),
	[DUMP_MAFPC_FLASH] = DUMPINFO_INIT(mafpc_flash, &s6e3hac_restbl[RES_MAFPC_FLASH], show_mafpc_flash_log),
#endif

};

enum {
	S6E3HAC_AID_2_CYCLE,
	S6E3HAC_AID_4_CYCLE,
	MAX_S6E3HAC_AID_CYCLE,
};

enum {
	S6E3HAC_SCALER_OFF,
	S6E3HAC_SCALER_x1_78,
	S6E3HAC_SCALER_x4,
	MAX_S6E3HAC_SCALER,
};

static u32 S6E3HAC_SCALER_1440[] = {
	[S6E3HAC_SCALER_OFF] = 1440,
	[S6E3HAC_SCALER_x1_78] = 1080,
	[S6E3HAC_SCALER_x4] = 720,
};

/* Variable Refresh Rate */
enum {
	S6E3HAC_VRR_MODE_NS,
	S6E3HAC_VRR_MODE_HS,
	MAX_S6E3HAC_VRR_MODE,
};

enum {
	S6E3HAC_VRR_60NS,
	S6E3HAC_VRR_48NS,
	S6E3HAC_VRR_120HS,
	S6E3HAC_VRR_96HS,
	S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1,
	S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1,
	S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1,
	S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1,
	MAX_S6E3HAC_VRR,
};

enum {
	S6E3HAC_RESOL_1440x3088,
	S6E3HAC_RESOL_1080x2316,
	S6E3HAC_RESOL_720x1544,
};

enum {
	S6E3HAC_DISPLAY_MODE_1440x3088_60NS,
	S6E3HAC_DISPLAY_MODE_1440x3088_48NS,
	S6E3HAC_DISPLAY_MODE_1080x2316_120HS,
	S6E3HAC_DISPLAY_MODE_1080x2316_96HS,
	S6E3HAC_DISPLAY_MODE_1080x2316_60HS_120HS_TE_SW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_1080x2316_48HS_96HS_TE_SW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_1080x2316_60HS_120HS_TE_HW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_1080x2316_48HS_96HS_TE_HW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_1080x2316_60NS,
	S6E3HAC_DISPLAY_MODE_1080x2316_48NS,
	S6E3HAC_DISPLAY_MODE_720x1544_120HS,
	S6E3HAC_DISPLAY_MODE_720x1544_96HS,
	S6E3HAC_DISPLAY_MODE_720x1544_60HS_120HS_TE_SW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_720x1544_48HS_96HS_TE_SW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_720x1544_60HS_120HS_TE_HW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_720x1544_48HS_96HS_TE_HW_SKIP_1,
	S6E3HAC_DISPLAY_MODE_720x1544_60NS,
	S6E3HAC_DISPLAY_MODE_720x1544_48NS,
	MAX_S6E3HAC_DISPLAY_MODE,
};

enum {
	S6E3HAC_VRR_KEY_REFRESH_RATE,
	S6E3HAC_VRR_KEY_REFRESH_MODE,
	S6E3HAC_VRR_KEY_TE_SW_SKIP_COUNT,
	S6E3HAC_VRR_KEY_TE_HW_SKIP_COUNT,
	MAX_S6E3HAC_VRR_KEY,
};

static u32 S6E3HAC_VRR_FPS[MAX_S6E3HAC_VRR][MAX_S6E3HAC_VRR_KEY] = {
	[S6E3HAC_VRR_48NS] = { 48, VRR_NORMAL_MODE, 0, 0 },
	[S6E3HAC_VRR_60NS] = { 60, VRR_NORMAL_MODE, 0, 0 },
	[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = { 96, VRR_HS_MODE, 1, 0 },
	[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = { 120, VRR_HS_MODE, 1, 0 },
	[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = { 96, VRR_HS_MODE, 0, 1 },
	[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = { 120, VRR_HS_MODE, 0, 1 },
	[S6E3HAC_VRR_96HS] = { 96, VRR_HS_MODE, 0, 0 },
	[S6E3HAC_VRR_120HS] = { 120, VRR_HS_MODE, 0, 0 },
};

enum {
	S6E3HAC_VRR_LFD_SCALABILITY_NONE,
	S6E3HAC_VRR_LFD_SCALABILITY_1,
	S6E3HAC_VRR_LFD_SCALABILITY_2,
	S6E3HAC_VRR_LFD_SCALABILITY_3,
	S6E3HAC_VRR_LFD_SCALABILITY_4,
	S6E3HAC_VRR_LFD_SCALABILITY_5,
	S6E3HAC_VRR_LFD_SCALABILITY_6,
	MAX_S6E3HAC_VRR_LFD_SCALABILITY,
};

#define S6E3HAC_VRR_LFD_SCALABILITY_MIN (S6E3HAC_VRR_LFD_SCALABILITY_1)
#define S6E3HAC_VRR_LFD_SCALABILITY_DEF (S6E3HAC_VRR_LFD_SCALABILITY_5)
#define S6E3HAC_VRR_LFD_SCALABILITY_MAX (S6E3HAC_VRR_LFD_SCALABILITY_6)

static u32 S6E3HAC_VRR_LFD_MIN_FREQ[MAX_S6E3HAC_VRR_LFD_SCALABILITY][MAX_S6E3HAC_VRR] = {
	/* scalability default */
	[S6E3HAC_VRR_LFD_SCALABILITY_NONE] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 11,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 11,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 11,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 11,
		[S6E3HAC_VRR_96HS] = 11,
		[S6E3HAC_VRR_120HS] = 11,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_1] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 60,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 48,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 60,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 48,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 60,
		[S6E3HAC_VRR_96HS] = 96,
		[S6E3HAC_VRR_120HS] = 120,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_2] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 48,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 60,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 48,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 60,
		[S6E3HAC_VRR_96HS] = 48,
		[S6E3HAC_VRR_120HS] = 60,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_3] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 24,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 24,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 30,
		[S6E3HAC_VRR_96HS] = 24,
		[S6E3HAC_VRR_120HS] = 30,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_4] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 24,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 24,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 24,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 24,
		[S6E3HAC_VRR_96HS] = 24,
		[S6E3HAC_VRR_120HS] = 24,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_5] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 11,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 11,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 11,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 11,
		[S6E3HAC_VRR_96HS] = 11,
		[S6E3HAC_VRR_120HS] = 11,
	},
	[S6E3HAC_VRR_LFD_SCALABILITY_6] = {
		[S6E3HAC_VRR_48NS] = 48,
		[S6E3HAC_VRR_60NS] = 30,
		[S6E3HAC_VRR_48HS_96HS_TE_SW_SKIP_1] = 1,
		[S6E3HAC_VRR_60HS_120HS_TE_SW_SKIP_1] = 1,
		[S6E3HAC_VRR_48HS_96HS_TE_HW_SKIP_1] = 1,
		[S6E3HAC_VRR_60HS_120HS_TE_HW_SKIP_1] = 1,
		[S6E3HAC_VRR_96HS] = 1,
		[S6E3HAC_VRR_120HS] = 1,
	},
};

static u32 S6E3HAC_LPM_LFD_MIN_FREQ[MAX_S6E3HAC_VRR_LFD_SCALABILITY] = {
	/* scalability default */
	[S6E3HAC_VRR_LFD_SCALABILITY_NONE] = 1,
	[S6E3HAC_VRR_LFD_SCALABILITY_1] = 30,
	[S6E3HAC_VRR_LFD_SCALABILITY_2] = 30,
	[S6E3HAC_VRR_LFD_SCALABILITY_3] = 30,
	[S6E3HAC_VRR_LFD_SCALABILITY_4] = 30,
	[S6E3HAC_VRR_LFD_SCALABILITY_5] = 1,
	[S6E3HAC_VRR_LFD_SCALABILITY_6] = 1,
};

enum {
	S6E3HAC_GAMMA_MTP_0,
	S6E3HAC_GAMMA_MTP_1,
	S6E3HAC_GAMMA_MTP_2,
	S6E3HAC_GAMMA_MTP_3,
	S6E3HAC_GAMMA_MTP_4,
	S6E3HAC_GAMMA_MTP_5,
	S6E3HAC_GAMMA_MTP_6,
	MAX_S6E3HAC_GAMMA_MTP,
};

enum {
	/**
	 * the order of S6E3HAC_VRR_LFD_FRAME_IDX enum
	 * could be mearningful. so don't change the order.
	 */
	S6E3HAC_VRR_LFD_FRAME_IDX_HS_BEGIN,
	S6E3HAC_VRR_LFD_FRAME_IDX_120_HS = S6E3HAC_VRR_LFD_FRAME_IDX_HS_BEGIN,
	S6E3HAC_VRR_LFD_FRAME_IDX_96_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_60_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_48_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_32_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_30_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_24_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_11_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_1_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_HS_END = S6E3HAC_VRR_LFD_FRAME_IDX_1_HS,
	S6E3HAC_VRR_LFD_FRAME_IDX_NS_BEGIN,
	S6E3HAC_VRR_LFD_FRAME_IDX_60_NS = S6E3HAC_VRR_LFD_FRAME_IDX_NS_BEGIN,
	S6E3HAC_VRR_LFD_FRAME_IDX_48_NS,
	S6E3HAC_VRR_LFD_FRAME_IDX_30_NS,
	S6E3HAC_VRR_LFD_FRAME_IDX_NS_END = S6E3HAC_VRR_LFD_FRAME_IDX_30_NS,
	MAX_S6E3HAC_VRR_LFD_FRAME_IDX,
};

static u32 S6E3HAC_VRR_LFD_FRAME_IDX_VAL[MAX_S6E3HAC_VRR_LFD_FRAME_IDX] = {
	[S6E3HAC_VRR_LFD_FRAME_IDX_120_HS] = 120,
	[S6E3HAC_VRR_LFD_FRAME_IDX_96_HS] = 96,
	[S6E3HAC_VRR_LFD_FRAME_IDX_60_HS] = 60,
	[S6E3HAC_VRR_LFD_FRAME_IDX_48_HS] = 48,
	[S6E3HAC_VRR_LFD_FRAME_IDX_32_HS] = 32,
	[S6E3HAC_VRR_LFD_FRAME_IDX_30_HS] = 30,
	[S6E3HAC_VRR_LFD_FRAME_IDX_24_HS] = 24,
	[S6E3HAC_VRR_LFD_FRAME_IDX_11_HS] = 11,
	[S6E3HAC_VRR_LFD_FRAME_IDX_1_HS] = 1,
	[S6E3HAC_VRR_LFD_FRAME_IDX_60_NS] = 60,
	[S6E3HAC_VRR_LFD_FRAME_IDX_48_NS] = 48,
	[S6E3HAC_VRR_LFD_FRAME_IDX_30_NS] = 30,
};

#if defined(__PANEL_NOT_USED_VARIABLE__)
static u32 S6E3HAC_VRR_MODE[] = {
	[S6E3HAC_VRR_MODE_NS] = VRR_NORMAL_MODE,
	[S6E3HAC_VRR_MODE_HS] = VRR_HS_MODE,
};
#endif

static int init_common_table(struct maptbl *);
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
static int getidx_common_maptbl(struct maptbl *);
#endif
static int init_gamma_mode2_brt_table(struct maptbl *tbl);
static int getidx_gamma_mode2_brt_table(struct maptbl *);
static int getidx_gamma_mode2_exit_lpm_maptbl(struct maptbl *tbl);
static int init_vbias1_table(struct maptbl *tbl);
static int init_vbias2_table(struct maptbl *tbl);
static int getidx_vbias1_table(struct maptbl *);
static int getidx_vbias2_table(struct maptbl *);
static int getidx_gm2_elvss_table(struct maptbl *tbl);
static int init_gamma_mtp_0_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_1_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_2_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_3_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_4_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_5_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_6_ns_table(struct maptbl *tbl);
static int init_gamma_mtp_0_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_1_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_2_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_3_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_4_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_5_hs_table(struct maptbl *tbl);
static int init_gamma_mtp_6_hs_table(struct maptbl *tbl);
static int getidx_hbm_transition_table(struct maptbl *tbl);
static int getidx_acl_opr_table(struct maptbl *);
static int getidx_dia_onoff_table(struct maptbl *tbl);
static int getidx_irc_mode_table(struct maptbl *tbl);

static bool is_panel_state_not_lpm(struct panel_device *panel);
static bool is_brightdot_enabled(struct panel_device *panel);
static bool is_brightdot_disabled(struct panel_device *panel);

#ifdef CONFIG_SUPPORT_XTALK_MODE
static int getidx_vgh_table(struct maptbl *);
#endif
static int getidx_dsc_table(struct maptbl *);
static int getidx_resolution_table(struct maptbl *);
static int getidx_vrr_fps_table(struct maptbl *);
static int init_lpm_brt_table(struct maptbl *tbl);
static int getidx_lpm_brt_table(struct maptbl *);
static int getidx_lpm_mode_table(struct maptbl *);
static int getidx_lpm_fps_table(struct maptbl *);
static int getidx_vrr_mode_table(struct maptbl *);
static int getidx_lfd_frame_insertion_table(struct maptbl *tbl);

#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
static void copy_dummy_maptbl(struct maptbl *tbl, u8 *dst);
#endif
static void copy_common_maptbl(struct maptbl *, u8 *);
static void copy_tset_maptbl(struct maptbl *, u8 *);
static void copy_lfd_min_maptbl(struct maptbl *tbl, u8 *dst);
static void copy_lfd_max_maptbl(struct maptbl *tbl, u8 *dst);

#ifdef CONFIG_EXYNOS_DECON_LCD_COPR
static void copy_copr_maptbl(struct maptbl *, u8 *);
#endif

#ifdef CONFIG_DYNAMIC_FREQ
static int getidx_dyn_ffc_table(struct maptbl *tbl);
#endif

#ifdef CONFIG_SUPPORT_GRAM_CHECKSUM
static int s6e3hac_getidx_vddm_table(struct maptbl *);
static int s6e3hac_getidx_gram_img_pattern_table(struct maptbl *tbl);
#endif

#ifdef CONFIG_SUPPORT_TDMB_TUNE
static int s6e3hac_getidx_tdmb_tune_table(struct maptbl *tbl);
#endif
#if 0
static int getidx_dimming_vrr_60hz_maptbl(struct maptbl *);
static int getidx_dimming_vrr_120hz_maptbl(struct maptbl *);
#endif
#ifdef CONFIG_SUPPORT_MAFPC
static void copy_mafpc_enable_maptbl(struct maptbl *tbl, u8 *dst);
static void copy_mafpc_scale_maptbl(struct maptbl *tbl, u8 *dst);
#endif
#ifdef CONFIG_EXYNOS_DECON_MDNIE_LITE
static int init_color_blind_table(struct maptbl *tbl);
static int getidx_mdnie_scenario_maptbl(struct maptbl *tbl);
static int getidx_mdnie_hdr_maptbl(struct maptbl *tbl);
static int getidx_mdnie_trans_mode_maptbl(struct maptbl *tbl);
static int init_mdnie_night_mode_table(struct maptbl *tbl);
static int getidx_mdnie_night_mode_maptbl(struct maptbl *tbl);
static int init_mdnie_color_lens_table(struct maptbl *tbl);
static int getidx_color_lens_maptbl(struct maptbl *tbl);
static int init_color_coordinate_table(struct maptbl *);
static int init_sensor_rgb_table(struct maptbl *tbl);
static int getidx_adjust_ldu_maptbl(struct maptbl *tbl);
static int getidx_color_coordinate_maptbl(struct maptbl *tbl);
static void copy_color_coordinate_maptbl(struct maptbl *tbl, u8 *dst);
static void copy_scr_white_maptbl(struct maptbl *tbl, u8 *dst);
static void copy_adjust_ldu_maptbl(struct maptbl *tbl, u8 *dst);
static int getidx_trans_maptbl(struct pkt_update_info *pktui);
static int getidx_mdnie_0_maptbl(struct pkt_update_info *pktui);
static int getidx_mdnie_1_maptbl(struct pkt_update_info *pktui);
static int getidx_mdnie_2_maptbl(struct pkt_update_info *pktui);
static int getidx_mdnie_scr_white_maptbl(struct pkt_update_info *pktui);
static void update_current_scr_white(struct maptbl *tbl, u8 *dst);
#ifdef CONFIG_SUPPORT_AFC
static void copy_afc_maptbl(struct maptbl *tbl, u8 *dst);
#endif
#endif /* CONFIG_EXYNOS_DECON_MDNIE_LITE */

#endif /* __S6E3HAC_H__ */
